{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,MAAM;EAAEA,GAAG;EAAEC;AAAc,CAAC,GAAGC,mBAAO,CAAC,0BAAU,CAAC;AAClD,MAAMC,IAAI,GAAGD,mBAAO,CAAC,kBAAM,CAAC;;AAE5B;AACA,IAAIE,OAAO,CAACC,QAAQ,KAAK,OAAO,EAAE;EAChCL,GAAG,CAACM,iBAAiB,CAACN,GAAG,CAACO,IAAI,CAAC;AACjC;AAEA,MAAMC,aAAa,GAAGJ,aAAoB,KAAK,YAAY;AAE3D,MAAMO,YAAY,GAAGA,CAAA,KAAM;EACzB;EACA,MAAMC,UAAU,GAAG,IAAIX,aAAa,CAAC;IACnCY,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,GAAG;IACXC,cAAc,EAAE;MACdC,OAAO,EAAEb,IAAI,CAACc,IAAI,CAACC,SAAS,EAAE,YAAY,CAAC;MAC3CC,eAAe,EAAE,IAAI;MACrBC,gBAAgB,EAAE;IACpB;EACF,CAAC,CAAC;;EAEF;EACA,IAAIZ,aAAa,EAAE;IACjBI,UAAU,CAACS,OAAO,CAAC,uBAAuB,CAAC;IAC3C;IACAT,UAAU,CAACU,WAAW,CAACC,YAAY,CAAC,CAAC;EACvC,CAAC,MAAM;IACLX,UAAU,CAACY,QAAQ,CAACrB,IAAI,CAACc,IAAI,CAACC,SAAS,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;EAClE;AACF,CAAC;;AAED;AACA;AACA;AACAlB,GAAG,CAACyB,SAAS,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;EACzBf,YAAY,CAAC,CAAC;EAEdX,GAAG,CAAC2B,EAAE,CAAC,UAAU,EAAE,MAAM;IACvB;IACA;IACA,IAAI1B,aAAa,CAAC2B,aAAa,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAElB,YAAY,CAAC,CAAC;EAChE,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACAX,GAAG,CAAC2B,EAAE,CAAC,mBAAmB,EAAE,MAAM;EAChC,IAAIvB,OAAO,CAACC,QAAQ,KAAK,QAAQ,EAAEL,GAAG,CAAC8B,IAAI,CAAC,CAAC;AAC/C,CAAC,CAAC;;AAEF;AACA,sE","sources":["webpack://ai-interview-detector/external node-commonjs \"electron\"","webpack://ai-interview-detector/external node-commonjs \"path\"","webpack://ai-interview-detector/webpack/bootstrap","webpack://ai-interview-detector/./main.js"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { app, BrowserWindow } = require(\"electron\");\nconst path = require(\"path\");\n\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\nif (process.platform === \"win32\") {\n  app.setAppUserModelId(app.name);\n}\n\nconst isDevelopment = process.env.NODE_ENV !== \"production\";\n\nconst createWindow = () => {\n  // Create the browser window.\n  const mainWindow = new BrowserWindow({\n    width: 1200,\n    height: 800,\n    webPreferences: {\n      preload: path.join(__dirname, \"preload.js\"),\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  });\n\n  // and load the index.html of the app.\n  if (isDevelopment) {\n    mainWindow.loadURL(\"http://localhost:3000\");\n    // Open the DevTools.\n    mainWindow.webContents.openDevTools();\n  } else {\n    mainWindow.loadFile(path.join(__dirname, \"build\", \"index.html\"));\n  }\n};\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.whenReady().then(() => {\n  createWindow();\n\n  app.on(\"activate\", () => {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (BrowserWindow.getAllWindows().length === 0) createWindow();\n  });\n});\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q.\napp.on(\"window-all-closed\", () => {\n  if (process.platform !== \"darwin\") app.quit();\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and import them here.\n"],"names":["app","BrowserWindow","require","path","process","platform","setAppUserModelId","name","isDevelopment","env","NODE_ENV","createWindow","mainWindow","width","height","webPreferences","preload","join","__dirname","nodeIntegration","contextIsolation","loadURL","webContents","openDevTools","loadFile","whenReady","then","on","getAllWindows","length","quit"],"sourceRoot":""}